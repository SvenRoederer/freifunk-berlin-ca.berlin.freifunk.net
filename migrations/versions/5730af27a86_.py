"""empty message

Revision ID: 5730af27a86
Revises: 24f2ed77b16
Create Date: 2016-01-17 00:41:12.144860

"""

# revision identifiers, used by Alembic.
revision = '5730af27a86'
down_revision = '24f2ed77b16'

from alembic import op
import sqlalchemy as sa
from ca import app,db
from ca.models import Request
import os

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    # SQLite cane add unique column
    if "sqlite" == db.get_engine(app).name:
        conn=op.get_bind()
        conn.execute("ALTER TABLE request rename to request_old;")
        conn.execute("CREATE TABLE request ( id VARCHAR(80) NOT NULL, email VARCHAR(120), generation_date DATE, cert_sn INT UNIQUE, PRIMARY KEY (id));")
        conn.execute("INSERT INTO request SELECT id, email, generation_date, NULL from request_old;")
        conn.execute("DROP TABLE request_old;")
    else:
        op.add_column('request', sa.Column('cert_sn', sa.Integer(), nullable=True, unique=True))
    import_easyrsa_certsn()
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    # SQLite dosn't support "drop Column"
    if "sqlite" == db.get_engine(app).name:
        conn=op.get_bind()
        conn.execute("ALTER TABLE request RENAME TO request_old;")
        conn.execute("CREATE TABLE request ( id VARCHAR(80) NOT NULL, email VARCHAR(120), generation_date DATE, PRIMARY KEY (id));")
        conn.execute("INSERT INTO request SELECT id, email, generation_date from request_old;")
        conn.execute("DROP TABLE request_old;")
    else:
        op.drop_column('request', 'cert_sn')
    ### end Alembic commands ###

def import_easyrsa_certsn():
    print ("begin import of old EasyRSA certificates")
    easyrsa_index = open(os.path.join(app.config['DIRECTORY'], "index.txt"), 'r')
    for request in Request.query.filter(Request.generation_date != None).filter(Request.cert_sn == None).all():
        req_subject = "/CN=freifunk_" + request.id + "/emailAddress=" + request.email
        print("looking up : " + req_subject)
        for line in easyrsa_index:
            (flag, signdate, revokedate, sn, unknown, subject) = line.split("\t")
            if (revokedate != None) and (req_subject in subject):
                print (" match")
                request.cert_sn = sn
                print (" imported")
        easyrsa_index.seek(0)
    db.session.commit()
